{"version":3,"file":"static/js/251.906ef172.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/pages/MovieDetails/MovieDetails.styled.js","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  display: flex;\n  gap: 15px;\n`;\n\nexport const Image = styled.img`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const DescMovie = styled.div``;\n\nexport const Title = styled.h2``;\n\nexport const DescText = styled.p``;\n\nexport const DescSubtitle = styled.h3``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  DescMovie,\n  DescSubtitle,\n  DescText,\n  Image,\n  Title,\n} from './MovieItem.styled';\n\nconst MovieItem = ({ movieDetails }) => {\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n  const getGenres = () => {\n    return genres?.map(({ name }) => name).join(', ');\n  };\n\n  const posterPath =\n    poster_path && `https://image.tmdb.org/t/p/w300${poster_path}`;\n  return (\n    <Container>\n      <Image src={posterPath} alt={title} width=\"200\" />\n      <DescMovie>\n        <Title>{title}</Title>\n        <DescText>\n          User Score: {Math.round((vote_average * 100) / 10)}%\n        </DescText>\n        <DescSubtitle>Overview</DescSubtitle>\n        <DescText>{overview}</DescText>\n        <DescSubtitle>Genres</DescSubtitle>\n        <DescText>{getGenres()}</DescText>\n      </DescMovie>\n    </Container>\n  );\n};\n\nMovieItem.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default MovieItem;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const StyledLinkBtn = styled(Link)`\n  margin-left: 15px;\n  padding: 4px 8px;\n  border: 1px solid #808080;\n  border-radius: 5px;\n  color: #000;\n  font-weight: 500;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const AddInfo = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  border-top: 1px solid #a3a3a3;\n  border-bottom: 1px solid #a3a3a3;\n  width: 100vw;\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport * as API from 'services/apiService';\nimport {\n  AddInfo,\n  Container,\n  StyledLinkBtn,\n  Title,\n} from './MovieDetails.styled';\nimport {\n  List,\n  ListItem,\n  StyledLink,\n} from 'components/MovieList/MovieList.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieDetails = async movieId => {\n      try {\n        const movieDetails = await API.getMovieDetails(movieId);\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <Container>\n      <StyledLinkBtn to={backLinkLocationRef.current}>\n        &larr; Go back\n      </StyledLinkBtn>\n      <MovieItem movieDetails={movieDetails} />\n      <AddInfo>\n        <Title>Additional information</Title>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\" state={backLinkLocationRef.current}>\n              Cast\n            </StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ListItem>\n        </List>\n      </AddInfo>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","DescMovie","_templateObject3","Title","_templateObject4","DescText","_templateObject5","DescSubtitle","_templateObject6","_ref","movieDetails","poster_path","title","vote_average","overview","genres","posterPath","concat","_jsxs","children","_jsx","src","alt","width","Math","round","map","_ref2","name","join","StyledLinkBtn","Link","AddInfo","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_location$state","_useState","useState","_useState2","_slicedToArray","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","from","movieId","useParams","useEffect","fetchMovieDetails","_asyncToGenerator","_callee","_movieDetails","_context","API","t0","console","log","message","_x","apply","arguments","to","current","MovieItem","List","ListItem","StyledLink","Outlet"],"sourceRoot":""}